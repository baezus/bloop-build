[{"/home/elias/Seven Seas/bloop-build/client/src/index.js":"1","/home/elias/Seven Seas/bloop-build/client/src/App.js":"2","/home/elias/Seven Seas/bloop-build/client/src/components/Navbar.js":"3","/home/elias/Seven Seas/bloop-build/client/src/config/routes.js":"4","/home/elias/Seven Seas/bloop-build/client/src/components/Login.js":"5","/home/elias/Seven Seas/bloop-build/client/src/components/Register.js":"6","/home/elias/Seven Seas/bloop-build/client/src/pages/Home.js":"7","/home/elias/Seven Seas/bloop-build/client/src/pages/User.js":"8","/home/elias/Seven Seas/bloop-build/client/src/models/AuthModel.js":"9","/home/elias/Seven Seas/bloop-build/client/src/models/UserModel.js":"10","/home/elias/Seven Seas/bloop-build/client/src/recoil/UserState.js":"11","/home/elias/Seven Seas/bloop-build/client/src/components/Bloop.js":"12"},{"size":308,"mtime":1607998878183,"results":"13","hashOfConfig":"14"},{"size":748,"mtime":1608225576388,"results":"15","hashOfConfig":"14"},{"size":896,"mtime":1608227873639,"results":"16","hashOfConfig":"14"},{"size":591,"mtime":1608164868216,"results":"17","hashOfConfig":"14"},{"size":1779,"mtime":1608163904956,"results":"18","hashOfConfig":"14"},{"size":1404,"mtime":1608225611344,"results":"19","hashOfConfig":"14"},{"size":141,"mtime":1608165048814,"results":"20","hashOfConfig":"14"},{"size":0,"mtime":1607998974970,"results":"21","hashOfConfig":"14"},{"size":575,"mtime":1608005885598,"results":"22","hashOfConfig":"14"},{"size":269,"mtime":1608006022898,"results":"23","hashOfConfig":"14"},{"size":85,"mtime":1608163368617,"results":"24","hashOfConfig":"14"},{"size":2458,"mtime":1608225419142,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jv1nzo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/home/elias/Seven Seas/bloop-build/client/src/index.js",[],["53","54"],"/home/elias/Seven Seas/bloop-build/client/src/App.js",[],"/home/elias/Seven Seas/bloop-build/client/src/components/Navbar.js",["55"],"/home/elias/Seven Seas/bloop-build/client/src/config/routes.js",[],"/home/elias/Seven Seas/bloop-build/client/src/components/Login.js",["56"],"import React, { useState, useContext } from 'react';\nimport AuthModel from '../models/AuthModel';\nimport UserModel from '../models/UserModel';\nimport { UserContext } from '../recoil/UserState';\n\nconst Login = (props) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userInfo, setUserInfo] = useContext(UserContext);\n\n  const onUsernameChange = e => setUsername(e.target.value)\n  const onPasswordChange = e => setPassword(e.target.value)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    AuthModel.login({\n      username,\n      password\n    }).then((res) => {\n      console.log(res);\n      localStorage.setItem(\"uid\", res.signedJwt);\n      UserModel.show().then((res) => {\n        props.history.push('/user');\n        console.log(res);\n      });\n    }\n  )};\n\n  return(\n    \n    <div>\n    <h1 className=\"title\">Login</h1>\n    <form action=\"URL\" method=\"POST\" onSubmit={onSubmit}>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"label\">Username: </label>\n            <input className=\"input\" type=\"text\" name=\"username\" onChange={onUsernameChange}/>\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <div className=\"control\">\n          <label className=\"label\">Password: </label>\n            <input className=\"input\" type=\"password\" name=\"password\" onChange={onPasswordChange}/>\n        </div>\n      </div>\n\n      <div className=\"field\">\n          <label className=\"label\">Submit</label>\n          <input \n          type=\"submit\" \n          className=\"button\" \n          name=\"submit\"\n          onClick={()=>{setUserInfo(userInfo => ({ signedIn: true, username: username }\n          ))}}/>\n      </div>\n    </form>\n  </div>\n  )\n}\n\nexport default Login;","/home/elias/Seven Seas/bloop-build/client/src/components/Register.js",[],"/home/elias/Seven Seas/bloop-build/client/src/pages/Home.js",[],"/home/elias/Seven Seas/bloop-build/client/src/pages/User.js",[],"/home/elias/Seven Seas/bloop-build/client/src/models/AuthModel.js",[],"/home/elias/Seven Seas/bloop-build/client/src/models/UserModel.js",[],"/home/elias/Seven Seas/bloop-build/client/src/recoil/UserState.js",[],"/home/elias/Seven Seas/bloop-build/client/src/components/Bloop.js",["57","58","59"],"import React, { useEffect, useContext } from 'react';\nimport '../styles/bloopbox.scss';\nimport io from 'socket.io-client';\nimport { UserContext } from '../recoil/UserState';\nconst socket = io.connect('http://localhost:2737');\n\nclass Bloop extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      msg: \"\", \n      chat: [], \n      nickname: ''};\n  }\n\n  componentDidMount() {\n    \n    socket.on('chat message', ({ nickname, msg }) => {\n      this.setState({\n        chat: [...this.state.chat, { nickname, msg }]\n      });\n    });\n  }\n\n  onTextChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onMessageSubmit = () => {\n    const { msg } = this.state;\n    const { nickname } = this.state;\n    socket.emit('chat message', { nickname, msg });\n    \n    this.setState({ msg: '' });\n  };\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ nickname, msg }, idx) => (\n      <div key={idx}>\n        <div className=\"sentBlooper\">\n        <span className=\"blooper is-size-6\">{nickname} </span>\n\n        <span className=\"sentBloop is-size-6\">{msg}</span>\n      </div>\n      </div>\n    ));\n  }\n\n  render() {\n    \n  return (\n    <div className=\"column is-half\">\n    <div className=\"above\">\n    <div className=\"message\">\n      <div className=\"message-header is-size-4\">Bloop Box</div>\n      <div className = \"bloopBox message-body\"> \n        <div className=\"container\">{this.renderChat()}\n      \n        <div className=\"field\">\n          <div className=\"control\">\n            Nickname: \n            <input \n            className=\"nickname\"\n            type=\"text\"\n            id=\"nickname\"\n            name=\"nickname\"\n            onChange={e => this.onTextChange(e)}\n            value = {this.state.nickname}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            Message: \n          <textarea\n            className=\"textarea is-small is-size-6\"\n            id=\"bloopinPut\"\n            rows=\"1\"\n            name=\"msg\"\n            onChange={e => this.onTextChange(e)}\n            value={this.state.msg}\n          />\n          </div>\n          <div className=\"column is-half\">\n          <button className=\"button is-outlined is-rounded is-small is-size-6\" onClick={this.onMessageSubmit}>Bloop</button></div>\n        </div>\n      </div>\n      </div>\n    </div>\n    </div>\n    </div>\n   );\n  }\n}\n\nexport default Bloop;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":18},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"69","line":1,"column":28,"nodeType":"66","messageId":"67","endLine":1,"endColumn":38},{"ruleId":"64","severity":1,"message":"70","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation"]